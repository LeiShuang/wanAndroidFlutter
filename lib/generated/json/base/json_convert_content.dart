// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:wanandroid/data/entitys/banner_entity_entity.dart';
import 'package:wanandroid/generated/json/banner_entity_entity_helper.dart';
import 'package:wanandroid/data/entitys/web_guide_entity.dart';
import 'package:wanandroid/generated/json/web_guide_entity_helper.dart';
import 'package:wanandroid/data/entitys/system_data_entity.dart';
import 'package:wanandroid/generated/json/system_data_entity_helper.dart';
import 'package:wanandroid/data/entitys/system_list_entity.dart';
import 'package:wanandroid/generated/json/system_list_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case BannerEntityEntity:
			return bannerEntityEntityFromJson(data as BannerEntityEntity, json) as T;			case BannerEntityData:
			return bannerEntityDataFromJson(data as BannerEntityData, json) as T;			case WebGuideEntity:
			return webGuideEntityFromJson(data as WebGuideEntity, json) as T;			case WebGuideData:
			return webGuideDataFromJson(data as WebGuideData, json) as T;			case WebGuideDataArticle:
			return webGuideDataArticleFromJson(data as WebGuideDataArticle, json) as T;			case SystemDataEntity:
			return systemDataEntityFromJson(data as SystemDataEntity, json) as T;			case SystemDataData:
			return systemDataDataFromJson(data as SystemDataData, json) as T;			case SystemDataDatachild:
			return systemDataDatachildFromJson(data as SystemDataDatachild, json) as T;			case SystemListEntity:
			return systemListEntityFromJson(data as SystemListEntity, json) as T;			case SystemListData:
			return systemListDataFromJson(data as SystemListData, json) as T;			case SystemListDataData:
			return systemListDataDataFromJson(data as SystemListDataData, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case BannerEntityEntity:
			return bannerEntityEntityToJson(data as BannerEntityEntity);			case BannerEntityData:
			return bannerEntityDataToJson(data as BannerEntityData);			case WebGuideEntity:
			return webGuideEntityToJson(data as WebGuideEntity);			case WebGuideData:
			return webGuideDataToJson(data as WebGuideData);			case WebGuideDataArticle:
			return webGuideDataArticleToJson(data as WebGuideDataArticle);			case SystemDataEntity:
			return systemDataEntityToJson(data as SystemDataEntity);			case SystemDataData:
			return systemDataDataToJson(data as SystemDataData);			case SystemDataDatachild:
			return systemDataDatachildToJson(data as SystemDataDatachild);			case SystemListEntity:
			return systemListEntityToJson(data as SystemListEntity);			case SystemListData:
			return systemListDataToJson(data as SystemListData);			case SystemListDataData:
			return systemListDataDataToJson(data as SystemListDataData);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'BannerEntityEntity':
			return BannerEntityEntity().fromJson(json);			case 'BannerEntityData':
			return BannerEntityData().fromJson(json);			case 'WebGuideEntity':
			return WebGuideEntity().fromJson(json);			case 'WebGuideData':
			return WebGuideData().fromJson(json);			case 'WebGuideDataArticle':
			return WebGuideDataArticle().fromJson(json);			case 'SystemDataEntity':
			return SystemDataEntity().fromJson(json);			case 'SystemDataData':
			return SystemDataData().fromJson(json);			case 'SystemDataDatachild':
			return SystemDataDatachild().fromJson(json);			case 'SystemListEntity':
			return SystemListEntity().fromJson(json);			case 'SystemListData':
			return SystemListData().fromJson(json);			case 'SystemListDataData':
			return SystemListDataData().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'BannerEntityEntity':
			return List<BannerEntityEntity>();			case 'BannerEntityData':
			return List<BannerEntityData>();			case 'WebGuideEntity':
			return List<WebGuideEntity>();			case 'WebGuideData':
			return List<WebGuideData>();			case 'WebGuideDataArticle':
			return List<WebGuideDataArticle>();			case 'SystemDataEntity':
			return List<SystemDataEntity>();			case 'SystemDataData':
			return List<SystemDataData>();			case 'SystemDataDatachild':
			return List<SystemDataDatachild>();			case 'SystemListEntity':
			return List<SystemListEntity>();			case 'SystemListData':
			return List<SystemListData>();			case 'SystemListDataData':
			return List<SystemListDataData>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}